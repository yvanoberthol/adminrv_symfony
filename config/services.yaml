# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr
    dir_image_medecin: '%kernel.project_dir%\public\uploads\image'
    time_interval: 20

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            $dir_medecin_image: '%dir_image_medecin%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    beta.html_adder:
        class: App\Event\BetaHtmlAdder

    beta.listener:
      class: App\EventListener\BetaListener
      arguments:
          - "@beta.html_adder"
          - "2019-12-25"
      tags:
        - { name: kernel.event_listener, event: kernel.response, method: processusBeta }

    error404.exception:
        class: App\Event\ExceptionHandler404
        arguments:
            - "@twig"

    error404.exception.listener:
        class: App\EventListener\ExceptionHandle404Listener
        arguments:
            - "@error404.exception"
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: process404}

    logout.listener:
        class: App\EventListener\LogoutListener